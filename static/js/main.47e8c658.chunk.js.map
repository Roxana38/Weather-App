{"version":3,"sources":["components/search.jsx","pages/city.jsx","App.js","index.js"],"names":["Search","router","useHistory","style","width","items","id","name","country","onSelect","item","push","City","cityCode","useParams","useState","weather","setWeather","city","split","getWeather","location","a","fetch","response","json","console","log","useEffect","className","height","target","href","loc","lat","long","toUpperCase","periods","temp","minC","parseInt","maxC","avgC","App","class","to","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAqDeA,EAjDA,WACb,IAAMC,EAAOC,cAyCb,OACE,yBAAKC,MAAO,CAAEC,MAAO,MACnB,kBAAC,0BAAD,CAAyBC,MA1Cf,CACZ,CACEC,GAAI,EACJC,KAAM,QACNC,QAAS,MAEX,CACEF,GAAI,EACJC,KAAM,YACNC,QAAS,aAEX,CACEF,GAAI,EACJC,KAAM,UACNC,QAAS,MAEX,CACEF,GAAI,EACJC,KAAM,UACNC,QAAS,MAEX,CACEF,GAAI,EACJC,KAAM,QACNC,QAAS,MAEX,CACEF,GAAI,EACJC,KAAM,SACNC,QAAS,MAEX,CACEF,GAAI,EACJC,KAAM,YACNC,QAAS,OAQ8BC,SALtB,SAACC,GACpBT,EAAOU,KAAP,gBAAqBD,EAAKH,KAA1B,YAAkCG,EAAKF,e,wCC8B5BI,EAvEF,WAAO,IACVC,EAAaC,cAAbD,SADS,EAEaE,qBAFb,mBAEVC,EAFU,KAEDC,EAFC,KAIbC,EAAOL,EAASM,MAAM,KAAK,GAIzBC,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACIC,MAAM,+CAAD,OACuBF,EADvB,kCAHX,wBAGW,0BAJP,6CAGF,cACbG,EADa,gBAKGA,EAASC,OALZ,OAKbT,EALa,OAMjBU,QAAQC,IAAIX,GACZC,EAAWD,GAPM,2CAAH,sDAchB,OAJAY,qBAAU,WACRR,EAAWP,KACV,CAACA,IAGF,yBAAKgB,UAAU,aACb,yBACEA,UAAU,gDACV1B,MAAO,CAAE2B,OAAQ,SAEhBd,GACC,yBAAKa,UAAU,cACb,yBAAKA,UAAU,aACb,uBACEE,OAAO,SACPC,KAAI,4CAAuChB,EAAQQ,SAAS,GAAGS,IAAIC,IAA/D,YAAsElB,EAAQQ,SAAS,GAAGS,IAAIE,OAEjG,IAJH,cAOA,wBAAIN,UAAU,4CACXX,EAAKkB,eAER,uBAAGP,UAAU,aAAb,0BAC0B,IACxB,0BAAMA,UAAU,aACbb,EAAQQ,SAAS,GAAGa,QAAQ,GAAGC,KAAKC,KADvC,WAIF,uBAAGV,UAAU,aAAb,2BAC2B,IACzB,0BAAMA,UAAU,eACbW,SAASxB,EAAQQ,SAAS,GAAGa,QAAQ,GAAGC,KAAKG,MAC3C,IAFL,UAMF,wBAAIZ,UAAU,aAAd,uBACuB,IACrB,0BAAMA,UAAU,aACbW,SAASxB,EAAQQ,SAAS,GAAGa,QAAQ,GAAGC,KAAKI,MAC3C,IAFL,eCjBDC,MArCf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKC,MAAM,iDACV,yBAAKf,UAAU,mBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,kBACd,4BACE,kBAAC,IAAD,CAAMA,UAAU,oBAAoBgB,GAAG,sBAAvC,cAIF,4BACE,kBAAC,IAAD,CAAMhB,UAAU,oBAAoBgB,GAAG,qBAAvC,aAIF,4BACE,kBAAC,IAAD,CAAMhB,UAAU,oBAAoBgB,GAAG,mBAAvC,YAKF,yBAAKhB,UAAU,eACf,kBAAC,EAAD,UAKP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiB,KAAK,kBAAkBC,UAAWnC,OChC/CoC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.47e8c658.chunk.js","sourcesContent":["import { ReactSearchAutocomplete } from \"react-search-autocomplete\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Search = () => {\r\n  const router=useHistory();\r\n  const items = [\r\n    {\r\n      id: 0,\r\n      name: \"Paris\",\r\n      country: \"fr\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Guangzhou\",\r\n      country: \"guangdong\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Toronto\",\r\n      country: \"on\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Mykonos\",\r\n      country: \"gr\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Milan\",\r\n      country: \"it\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Madrid\",\r\n      country: \"es\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Stockholm\",\r\n      country: \"se\",\r\n    },\r\n  ];\r\n  const handelOnSelect=(item)=>{\r\n    router.push(`/city/${item.name},${item.country}`);\r\n  };\r\n  return (\r\n    <div style={{ width: 400 }}>\r\n      <ReactSearchAutocomplete items={items} onSelect={handelOnSelect}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst City = () => {\r\n  const { cityCode } = useParams();\r\n  const [weather, setWeather] = useState();\r\n\r\n  let city = cityCode.split(\",\")[0];\r\n  const clientSecret = \"4AR0djJQEyvJR4Fm6EJQdAs0cl4KGcICayuilSyM\";\r\n  const clientId = \"lzGCpIE4IHQBOHwDYSRvB\";\r\n\r\n  const getWeather = async (location) => {\r\n    let response = await fetch(\r\n      `https://api.aerisapi.com/conditions/summary/${location}?format=json&client_id=${clientId}&client_secret=${clientSecret}`\r\n    );\r\n\r\n    let weather = await response.json();\r\n    console.log(weather);\r\n    setWeather(weather);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeather(cityCode);\r\n  }, [cityCode]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        className=\"row justify-content-center align-items-center\"\r\n        style={{ height: \"75vh\" }}\r\n      >\r\n        {weather && (\r\n          <div className=\"card col-6\">\r\n            <div className=\"card-body\">\r\n              <a\r\n                target=\"_blank\"\r\n                href={`https://www.google.com/maps?q=loc:${weather.response[0].loc.lat},${weather.response[0].loc.long}`}\r\n              >\r\n                {\" \"}\r\n                Google map\r\n              </a>\r\n              <h5 className=\"card-title text-success font-weight-bold\">\r\n                {city.toUpperCase()}\r\n              </h5>\r\n              <p className=\"card-text\">\r\n                The lowest temperature:{\" \"}\r\n                <span className=\"text-dark\">\r\n                  {weather.response[0].periods[0].temp.minC} C°\r\n                </span>\r\n              </p>\r\n              <p className=\"card-text\">\r\n                The highets temperature:{\" \"}\r\n                <span className=\"text-danger\">\r\n                  {parseInt(weather.response[0].periods[0].temp.maxC\r\n                  )}{\" \"}\r\n                  C°\r\n                </span>\r\n              </p>\r\n              <h6 className=\"card-text\">\r\n                Average temperature:{\" \"}\r\n                <span className=\"text-dark\">\r\n                  {parseInt(weather.response[0].periods[0].temp.avgC\r\n                  )}{\" \"}\r\n                  C°\r\n                </span>\r\n              </h6>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default City;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Search from \"./components/search\";\r\nimport { HashRouter ,Link ,Switch, Route } from \"react-router-dom\";\r\nimport City from \"./pages/city\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n       <div className=\"navbar-collapse\">\r\n         <div className=\"nav navbar-nav\">\r\n           <ul className=\"nav navbar-nav\">\r\n           <li>\r\n             <Link className=\"nav-item nav-link\" to=\"/city/bucharest,ro\">\r\n               Bucharest\r\n             </Link>\r\n           </li>\r\n           <li>\r\n             <Link className=\"nav-item nav-link\" to=\"/city/budapest,hu\">\r\n             Budapest\r\n             </Link>\r\n           </li>\r\n           <li>\r\n             <Link className=\"nav-item nav-link\" to=\"/city/warsaw,pl\">\r\n             Warsaw\r\n             </Link>\r\n           </li>\r\n           </ul>\r\n           <div className=\"form-inline\">\r\n           <Search></Search>\r\n           </div>\r\n         </div>\r\n         </div>\r\n         </nav>\r\n    <Switch>\r\n      <Route path=\"/city/:cityCode\" component={City}></Route>\r\n    </Switch>\r\n    </HashRouter>\r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}